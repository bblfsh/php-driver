// Package phpast defines constants for PHP-Parser lib nodes
package phpast

import "gopkg.in/bblfsh/sdk.v1/uast/ann"

// See native/nodes.txt
var (
	Alias                     = ann.HasInternalType("Stmt_TraitUseAdaptation_Alias")
	Arg                       = ann.HasInternalType("Arg")
	Array                     = ann.HasInternalType("Expr_Array")
	ArrayDimFetch             = ann.HasInternalType("Expr_ArrayDimFetch")
	ArrayItem                 = ann.HasInternalType("Expr_ArrayItem")
	Assign                    = ann.HasInternalType("Expr_Assign")
	AssignOpPlus              = ann.HasInternalType("Expr_AssignOp_Plus")
	AssignOpMinus             = ann.HasInternalType("Expr_AssignOp_Minus")
	AssignOpMul               = ann.HasInternalType("Expr_AssignOp_Mul")
	AssignOpDiv               = ann.HasInternalType("Expr_AssignOp_Div")
	AssignOpMod               = ann.HasInternalType("Expr_AssignOp_Mod")
	AssignRef                 = ann.HasInternalType("AssignRef") // XXX
	BitwiseAnd                = ann.HasInternalType("Expr_BinaryOp_BitwiseAnd")
	BitwiseNot                = ann.HasInternalType("Expr_BitwiseNot")
	BitwiseOr                 = ann.HasInternalType("Expr_BinaryOp_BitwiseOr")
	BitwiseXor                = ann.HasInternalType("Expr_BinaryOp_BitwiseXor")
	BooleanAnd                = ann.HasInternalType("Expr_BinaryOp_BooleanAnd")
	BooleanNot                = ann.HasInternalType("Expr_BooleanNot")
	BooleanOr                 = ann.HasInternalType("Expr_BinaryOp_BooleanOr")
	Break                     = ann.HasInternalType("Stmt_Break")
	Case                      = ann.HasInternalType("Stmt_Case")
	CastBool                  = ann.HasInternalType("Expr_Cast_Bool")
	CastInt                   = ann.HasInternalType("Expr_Cast_Int")
	CastDouble                = ann.HasInternalType("Expr_Cast_Double")
	CastString                = ann.HasInternalType("Expr_Cast_String")
	CastArray                 = ann.HasInternalType("Expr_Cast_Array")
	CastObject                = ann.HasInternalType("Expr_Cast_Object")
	CastUnset                 = ann.HasInternalType("Expr_Cast_Unset")
	Catch                     = ann.HasInternalType("Stmt_Catch")
	Class                     = ann.HasInternalType("Stmt_Class")
	ClassConst                = ann.HasInternalType("Stmt_ClassConst")
	ClassConstFetch           = ann.HasInternalType("Expr_ClassConstFetch")
	ClassLike                 = ann.HasInternalType("ClassLike") // XXX
	ClassMethod               = ann.HasInternalType("Stmt_ClassMethod")
	Clone                     = ann.HasInternalType("Expr_Clone")
	Closure                   = ann.HasInternalType("Expr_Closure")
	ClosureUse                = ann.HasInternalType("Expr_ClosureUse")
	Coalesce                  = ann.HasInternalType("Coalesce") // XXX
	Comment                   = ann.HasInternalType("Comment")
	Concat                    = ann.HasInternalType("Expr_BinaryOp_Concat")
	Const                     = ann.HasInternalType("Const")
	ConstFetch                = ann.HasInternalType("Expr_ConstFetch")
	Continue                  = ann.HasInternalType("Stmt_Continue")
	DNumber                   = ann.HasInternalType("Scalar_DNumber")
	Declare                   = ann.HasInternalType("Stmt_Declare")
	DeclareDeclare            = ann.HasInternalType("Stmt_DeclareDeclare")
	Dir                       = ann.HasInternalType("Dir") // XXX
	Div                       = ann.HasInternalType("Expr_BinaryOp_Div")
	Do                        = ann.HasInternalType("Stmt_Do")
	Doc                       = ann.HasInternalType("Comment_Doc")
	Echo                      = ann.HasInternalType("Stmt_Echo")
	Else                      = ann.HasInternalType("Stmt_Else")
	ElseIf                    = ann.HasInternalType("Stmt_ElseIf")
	Empty                     = ann.HasInternalType("Empty")              // XXX
	Encapsed                  = ann.HasInternalType("Encapsed")           // XXX
	EncapsedStringPart        = ann.HasInternalType("EncapsedStringPart") // XXX
	Equal                     = ann.HasInternalType("Expr_BinaryOp_Equal")
	Error                     = ann.HasInternalType("Error")        // XXX
	ErrorSupress              = ann.HasInternalType("ErrorSupress") // XXX
	Eval                      = ann.HasInternalType("Expr_Eval")
	Exit                      = ann.HasInternalType("Expr_Exit")
	Expr                      = ann.HasInternalType("Expr")
	Expression                = ann.HasInternalType("Expression") // XXX
	File                      = ann.HasInternalType("File")
	Finally                   = ann.HasInternalType("Stmt_Finally")
	For                       = ann.HasInternalType("Stmt_For")
	Foreach                   = ann.HasInternalType("Stmt_Foreach")
	FullyQualified            = ann.HasInternalType("Name_FullyQualified")
	FuncCall                  = ann.HasInternalType("Expr_FuncCall")
	Function                  = ann.HasInternalType("Stmt_Function")
	FunctionLike              = ann.HasInternalType("FunctionLike") // XXX
	Global                    = ann.HasInternalType("Stmt_Global")
	Goto                      = ann.HasInternalType("Stmt_Goto")
	Greater                   = ann.HasInternalType("Expr_BinaryOp_Greater")
	GreaterOrEqual            = ann.HasInternalType("Expr_BinaryOp_GreaterOrEqual")
	GroupUse                  = ann.HasInternalType("GroupUse")     // XXX
	HaltCompiler              = ann.HasInternalType("HaltCompiler") // XXX
	Identical                 = ann.HasInternalType("Expr_BinaryOp_Identical")
	Identifier                = ann.HasInternalType("Identifier") // XXX
	If                        = ann.HasInternalType("Stmt_If")
	Include                   = ann.HasInternalType("Expr_Include")
	InlineHTML                = ann.HasInternalType("Stmt_InlineHTML")
	Instanceof                = ann.HasInternalType("Expr_Instanceof")
	Int                       = ann.HasInternalType("Int") // XXX
	Interface                 = ann.HasInternalType("Stmt_Interface")
	Isset                     = ann.HasInternalType("Expr_Isset")
	LNumber                   = ann.HasInternalType("Scalar_LNumber")
	Label                     = ann.HasInternalType("Stmt_Label")
	Line                      = ann.HasInternalType("Line") // XXX
	List                      = ann.HasInternalType("Expr_List")
	LogicalAnd                = ann.HasInternalType("Expr_BinaryOp_LogicalAnd")
	LogicalOr                 = ann.HasInternalType("Expr_BinaryOp_LogicalOr")
	LogitcalXor               = ann.HasInternalType("Expr_BinaryOp_LogitcalXor")
	MagicConst                = ann.HasInternalType("MagicConst") // XXX
	MethodCall                = ann.HasInternalType("Expr_MethodCall")
	Mod                       = ann.HasInternalType("Expr_BinaryOp_Mod")
	Mul                       = ann.HasInternalType("Expr_BinaryOp_Mul")
	Name                      = ann.HasInternalType("Name")
	Namespace                 = ann.HasInternalType("Stmt_Namespace")
	New                       = ann.HasInternalType("Expr_New")
	Nop                       = ann.HasInternalType("Stmt_Nop")
	NotEqual                  = ann.HasInternalType("Expr_BinaryOp_NotEqual")
	NotIdentical              = ann.HasInternalType("Expr_BinaryOp_NotIdentical")
	NullableType              = ann.HasInternalType("NullableType")
	Object                    = ann.HasInternalType("Object") // XXX
	Param                     = ann.HasInternalType("Param")
	PostDec                   = ann.HasInternalType("Expr_PostDec")
	PostInc                   = ann.HasInternalType("Expr_PostInc")
	Pow                       = ann.HasInternalType("Expr_BinaryOp_Pow")
	PreDec                    = ann.HasInternalType("Expr_PreDec")
	PreInc                    = ann.HasInternalType("Expr_PreInc")
	Precedence                = ann.HasInternalType("Stmt_TraitUseAdaptation_Precedence")
	Print                     = ann.HasInternalType("Print") // XXX
	PrintableNewAnonClassNode = ann.HasInternalType("PrintableNewAnonClassNode") // XXX
	Property                  = ann.HasInternalType("Stmt_Property")
	PropertyFetch             = ann.HasInternalType("Stmt_PropertyFetch")
	PropertyProperty          = ann.HasInternalType("Stmt_PropertyProperty")
	Relative                  = ann.HasInternalType("Name_Relative")
	Return                    = ann.HasInternalType("Stmt_Return")
	ShiftLeft                 = ann.HasInternalType("Expr_BinaryOp_ShiftLeft")
	ShiftRight                = ann.HasInternalType("Expr_BinaryOp_ShiftRight")
	Smaller                   = ann.HasInternalType("Expr_BinaryOp_Smaller")
	SmallerOrEqual            = ann.HasInternalType("BinaryOp_SmallerOrEqual")
	Spaceship                 = ann.HasInternalType("Expr_BinaryOp_Spaceship")
	Static                    = ann.HasInternalType("Stmt_Static")
	StaticCall                = ann.HasInternalType("Expr_StaticCall")
	StaticPropertyFetch       = ann.HasInternalType("Expr_StaticPropertyFetch")
	StaticVar                 = ann.HasInternalType("Stmt_StaticVar")
	String                    = ann.HasInternalType("Scalar_String")
	Switch                    = ann.HasInternalType("Stmt_Switch")
	Ternary                   = ann.HasInternalType("Expr_Ternary")
	Throw                     = ann.HasInternalType("Stmt_Throw")
	Trait                     = ann.HasInternalType("Stmt_Trait")
	TraitUse                  = ann.HasInternalType("Stmt_TraitUse")
	TryCatch                  = ann.HasInternalType("Stmt_TryCatch")
	UnaryMinus                = ann.HasInternalType("Expr_UnaryMinus")
	UnaryPlus                 = ann.HasInternalType("Expr_UnaryPlus")
	Unset                     = ann.HasInternalType("Stmt_Unset")
	Use                       = ann.HasInternalType("Stmt_Use")
	UseUse                    = ann.HasInternalType("Stmt_UseUse")
	VarLikeIdentifier         = ann.HasInternalType("VarLikeIdentifier") // XXX
	Variable                  = ann.HasInternalType("Expr_Variable")
	While                     = ann.HasInternalType("Stmt_While")
	Yield                     = ann.HasInternalType("Expr_Yield")
	YieldFrom                 = ann.HasInternalType("Expr_YieldFrom")
	BinaryPlus                = ann.HasInternalType("Expr_BinaryOp_Plus")
)
