// Package phpast defines constants for PHP-Parser lib nodes
package phpast

import . "gopkg.in/bblfsh/sdk.v1/uast/ann"

var (
	Alias                     = HasInternalType("Stmt_TraitUseAdaptation_Alias")
	Arg                       = HasInternalType("Arg")
	Array                     = HasInternalType("Expr_Array")
	ArrayDimFetch             = HasInternalType("Expr_ArrayDimFetch")
	ArrayItem                 = HasInternalType("Expr_ArrayItem")
	Assign                    = HasInternalType("Expr_Assign")
	AssignOpDiv               = HasInternalType("Expr_AssignOp_Div")
	AssignOpMinus             = HasInternalType("Expr_AssignOp_Minus")
	AssignOpMod               = HasInternalType("Expr_AssignOp_Mod")
	AssignOpMul               = HasInternalType("Expr_AssignOp_Mul")
	AssignOpPlus              = HasInternalType("Expr_AssignOp_Plus")
	BinaryOpDiv               = HasInternalType("Expr_BinaryOp_Div")
	BinaryOpMinus             = HasInternalType("Expr_BinaryOp_Minus")
	BinaryOpMod               = HasInternalType("Expr_BinaryOp_Mod")
	BinaryOpMul               = HasInternalType("Expr_BinaryOp_Mul")
	BinaryOpPlus              = HasInternalType("Expr_BinaryOp_Plus")
	BinaryOpPow               = HasInternalType("Expr_BinaryOp_Pow")
	BitwiseAnd                = HasInternalType("Expr_BinaryOp_BitwiseAnd")
	BitwiseNot                = HasInternalType("Expr_BitwiseNot")
	BitwiseOr                 = HasInternalType("Expr_BinaryOp_BitwiseOr")
	BitwiseXor                = HasInternalType("Expr_BinaryOp_BitwiseXor")
	BooleanAnd                = Or(HasInternalType("Expr_BinaryOp_BooleanAnd"), HasInternalType("Expr_BinaryOp_LogicalAnd"))
	BooleanNot                = Or(HasInternalType("Expr_BooleanNot"), HasInternalType("Expr_LogicalNot"))
	BooleanOr                 = Or(HasInternalType("Expr_BinaryOp_BooleanOr"), HasInternalType("Expr_BinaryOp_LogicalOr"))
	BooleanXor                = Or(HasInternalType("Expr_BinaryOp_BooleanXor"), HasInternalType("Expr_BinaryOp_LogicalXor"))
	Break                     = HasInternalType("Stmt_Break")
	Case                      = HasInternalType("Stmt_Case")
	CastArray                 = HasInternalType("Expr_Cast_Array")
	CastBool                  = HasInternalType("Expr_Cast_Bool")
	CastDouble                = HasInternalType("Expr_Cast_Double")
	CastInt                   = HasInternalType("Expr_Cast_Int")
	CastObject                = HasInternalType("Expr_Cast_Object")
	CastString                = HasInternalType("Expr_Cast_String")
	CastUnset                 = HasInternalType("Expr_Cast_Unset")
	Catch                     = HasInternalType("Stmt_Catch")
	Class                     = HasInternalType("Stmt_Class")
	ClassConst                = HasInternalType("Stmt_ClassConst")
	ClassConstFetch           = HasInternalType("Expr_ClassConstFetch")
	ClassMethod               = HasInternalType("Stmt_ClassMethod")
	Clone                     = HasInternalType("Expr_Clone")
	Closure                   = HasInternalType("Expr_Closure")
	ClosureUse                = HasInternalType("Expr_ClosureUse")
	Coalesce                  = HasInternalType("Expr_BinaryOp_Coalesce")
	Comment                   = HasInternalType("Comment")
	Concat                    = HasInternalType("Expr_BinaryOp_Concat")
	Const                     = Or(HasInternalType("Const"), HasInternalType("Stmt_Const"))
	ConstFetch                = HasInternalType("Expr_ConstFetch")
	Continue                  = HasInternalType("Stmt_Continue")
	Declare                   = HasInternalType("Stmt_Declare")
	DeclareDeclare            = HasInternalType("Stmt_DeclareDeclare")
	Do                        = HasInternalType("Stmt_Do")
	Doc                       = HasInternalType("Comment_Doc")
	Echo                      = HasInternalType("Stmt_Echo")
	Else                      = HasInternalType("Stmt_Else")
	ElseIf                    = HasInternalType("Stmt_ElseIf")
	Empty                     = HasInternalType("Expr_Empty")
	Encapsed                  = HasInternalType("Scalar_Encapsed")
	EncapsedStringPart        = HasInternalType("Scalar_EncapsedStringPart")
	Equal                     = HasInternalType("Expr_BinaryOp_Equal")
	ErrorSuppress              = HasInternalType("Expr_ErrorSuppress")
	Eval                      = HasInternalType("Expr_Eval")
	Exit                      = HasInternalType("Expr_Exit")
	File                      = HasInternalType("File")
	Finally                   = HasInternalType("Stmt_Finally")
	For                       = HasInternalType("Stmt_For")
	Foreach                   = HasInternalType("Stmt_Foreach")
	FullyQualified            = HasInternalType("Name_FullyQualified")
	FuncCall                  = HasInternalType("Expr_FuncCall")
	Function                  = HasInternalType("Stmt_Function")
	FunctionReturn            = HasInternalType("Stmt_Function.returnType")
	Global                    = HasInternalType("Stmt_Global")
	Goto                      = HasInternalType("Stmt_Goto")
	Greater                   = HasInternalType("Expr_BinaryOp_Greater")
	GreaterOrEqual            = HasInternalType("Expr_BinaryOp_GreaterOrEqual")
	Identical                 = HasInternalType("Expr_BinaryOp_Identical")
	Identifier                = HasInternalType("Identifier")
	If                        = HasInternalType("Stmt_If")
	Include                   = HasInternalType("Expr_Include")
	InlineHTML                = HasInternalType("Stmt_InlineHTML")
	Instanceof                = HasInternalType("Expr_Instanceof")
	Interface                 = HasInternalType("Stmt_Interface")
	Isset                     = HasInternalType("Expr_Isset")
	Label                     = HasInternalType("Stmt_Label")
	List                      = HasInternalType("Expr_List")
	LogicalAnd                = HasInternalType("Expr_BinaryOp_LogicalAnd")
	LogicalOr                 = HasInternalType("Expr_BinaryOp_LogicalOr")
	LogitcalXor               = HasInternalType("Expr_BinaryOp_LogitcalXor")
	MethodCall                = HasInternalType("Expr_MethodCall")
	Mod                       = HasInternalType("Expr_BinaryOp_Mod")
	Mul                       = HasInternalType("Expr_BinaryOp_Mul")
	Name                      = HasInternalType("Name")
	Namespace                 = HasInternalType("Stmt_Namespace")
	New                       = HasInternalType("Expr_New")
	Nop                       = HasInternalType("Stmt_Nop")
	NotEqual                  = HasInternalType("Expr_BinaryOp_NotEqual")
	NotIdentical              = HasInternalType("Expr_BinaryOp_NotIdentical")
	NullableType              = HasInternalType("NullableType")
	Param                     = HasInternalType("Param")
	PostDec                   = HasInternalType("Expr_PostDec")
	PostInc                   = HasInternalType("Expr_PostInc")
	Pow                       = HasInternalType("Expr_BinaryOp_Pow")
	PreDec                    = HasInternalType("Expr_PreDec")
	PreInc                    = HasInternalType("Expr_PreInc")
	TraitPrecedence           = HasInternalType("Stmt_TraitUseAdaptation_Precedence")
	Print                     = HasInternalType("Expr_Print")
	Property                  = HasInternalType("Stmt_Property")
	PropertyFetch             = HasInternalType("Expr_PropertyFetch")
	PropertyProperty          = HasInternalType("Stmt_PropertyProperty")
	NameRelative              = HasInternalType("Name_Relative")
	Return                    = HasInternalType("Stmt_Return")
	ScalarDNumber             = HasInternalType("Scalar_DNumber")
	ScalarLNumber             = HasInternalType("Scalar_LNumber")
	ScalarMagicClass          = HasInternalType("Scalar_MagicConst_Class")
	ScalarMagicDir            = HasInternalType("Scalar_MagicConst_Dir")
	ScalarMagicFile           = HasInternalType("Scalar_MagicConst_File")
	ScalarMagicFunction       = HasInternalType("Scalar_MagicConst_Function")
	ScalarMagicLine           = HasInternalType("Scalar_MagicConst_Line")
	ScalarMagicMethod         = HasInternalType("Scalar_MagicConst_Method")
	ScalarMagicNamespace      = HasInternalType("Scalar_MagicConst_Namespace")
	ScalarMagicTrait          = HasInternalType("Scalar_MagicConst_Trait")
	ScalarString              = HasInternalType("Scalar_String")
	ShiftLeft                 = HasInternalType("Expr_BinaryOp_ShiftLeft")
	ShiftRight                = HasInternalType("Expr_BinaryOp_ShiftRight")
	Smaller                   = HasInternalType("Expr_BinaryOp_Smaller")
	SmallerOrEqual            = HasInternalType("Expr_BinaryOp_SmallerOrEqual")
	Spaceship                 = HasInternalType("Expr_BinaryOp_Spaceship")
	Static                    = HasInternalType("Stmt_Static")
	StaticCall                = HasInternalType("Expr_StaticCall")
	StaticPropertyFetch       = HasInternalType("Expr_StaticPropertyFetch")
	StaticVar                 = HasInternalType("Stmt_StaticVar")
	Switch                    = HasInternalType("Stmt_Switch")
	Ternary                   = HasInternalType("Expr_Ternary")
	Throw                     = HasInternalType("Stmt_Throw")
	Trait                     = HasInternalType("Stmt_Trait")
	TraitUse                  = HasInternalType("Stmt_TraitUse")
	TryCatch                  = HasInternalType("Stmt_TryCatch")
	UnaryMinus                = HasInternalType("Expr_UnaryMinus")
	UnaryPlus                 = HasInternalType("Expr_UnaryPlus")
	Unset                     = HasInternalType("Stmt_Unset")
	Use                       = HasInternalType("Stmt_Use")
	UseUse                    = HasInternalType("Stmt_UseUse")
	Variable                  = HasInternalType("Expr_Variable")
	While                     = HasInternalType("Stmt_While")
	Yield                     = HasInternalType("Expr_Yield")
	YieldFrom                 = HasInternalType("Expr_YieldFrom")
)
